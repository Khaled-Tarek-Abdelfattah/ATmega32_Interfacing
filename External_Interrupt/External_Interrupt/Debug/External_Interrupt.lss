
External_Interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000033c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001294  00000000  00000000  000004e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d4  00000000  00000000  00001778  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008b6  00000000  00000000  0000204c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000198  00000000  00000000  00002904  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006d0  00000000  00000000  00002a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000079a  00000000  00000000  0000316c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00003906  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
   4:	0c 94 3c 01 	jmp	0x278	; 0x278 <__vector_1>
   8:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
   c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  10:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  14:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  18:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  1c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  20:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  24:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  28:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  2c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  30:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  34:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  38:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  3c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  40:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  44:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  48:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  4c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  50:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
  54:	6e 00       	.word	0x006e	; ????
  56:	74 00       	.word	0x0074	; ????
  58:	7a 00       	.word	0x007a	; ????
  5a:	80 00       	.word	0x0080	; ????
  5c:	86 00       	.word	0x0086	; ????
  5e:	8c 00       	.word	0x008c	; ????
  60:	92 00       	.word	0x0092	; ????
  62:	98 00       	.word	0x0098	; ????

00000064 <__ctors_end>:
  64:	11 24       	eor	r1, r1
  66:	1f be       	out	0x3f, r1	; 63
  68:	cf e5       	ldi	r28, 0x5F	; 95
  6a:	d8 e0       	ldi	r29, 0x08	; 8
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_clear_bss>:
  70:	20 e0       	ldi	r18, 0x00	; 0
  72:	a0 e6       	ldi	r26, 0x60	; 96
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	01 c0       	rjmp	.+2      	; 0x7a <.do_clear_bss_start>

00000078 <.do_clear_bss_loop>:
  78:	1d 92       	st	X+, r1

0000007a <.do_clear_bss_start>:
  7a:	a0 36       	cpi	r26, 0x60	; 96
  7c:	b2 07       	cpc	r27, r18
  7e:	e1 f7       	brne	.-8      	; 0x78 <.do_clear_bss_loop>
  80:	0e 94 67 01 	call	0x2ce	; 0x2ce <main>
  84:	0c 94 9c 01 	jmp	0x338	; 0x338 <_exit>

00000088 <__bad_interrupt>:
  88:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000008c <DioDirectionSet>:
			break;
		default:
			break;
	}
	
}
  8c:	44 23       	and	r20, r20
  8e:	19 f0       	breq	.+6      	; 0x96 <DioDirectionSet+0xa>
  90:	41 30       	cpi	r20, 0x01	; 1
  92:	71 f0       	breq	.+28     	; 0xb0 <DioDirectionSet+0x24>
  94:	08 95       	ret
  96:	fc 01       	movw	r30, r24
  98:	40 81       	ld	r20, Z
  9a:	21 e0       	ldi	r18, 0x01	; 1
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <DioDirectionSet+0x18>
  a0:	22 0f       	add	r18, r18
  a2:	33 1f       	adc	r19, r19
  a4:	6a 95       	dec	r22
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <DioDirectionSet+0x14>
  a8:	20 95       	com	r18
  aa:	24 23       	and	r18, r20
  ac:	20 83       	st	Z, r18
  ae:	08 95       	ret
  b0:	fc 01       	movw	r30, r24
  b2:	40 81       	ld	r20, Z
  b4:	21 e0       	ldi	r18, 0x01	; 1
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DioDirectionSet+0x32>
  ba:	22 0f       	add	r18, r18
  bc:	33 1f       	adc	r19, r19
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DioDirectionSet+0x2e>
  c2:	24 2b       	or	r18, r20
  c4:	20 83       	st	Z, r18
  c6:	08 95       	ret

000000c8 <DioChannelToggle>:
void DioChannelToggle(volatile uint8 * port,Dio_PinEnum_t pin){
	switch(pin){
  c8:	46 2f       	mov	r20, r22
  ca:	50 e0       	ldi	r21, 0x00	; 0
  cc:	48 30       	cpi	r20, 0x08	; 8
  ce:	51 05       	cpc	r21, r1
  d0:	98 f5       	brcc	.+102    	; 0x138 <DioChannelToggle+0x70>
  d2:	fa 01       	movw	r30, r20
  d4:	e6 5d       	subi	r30, 0xD6	; 214
  d6:	ff 4f       	sbci	r31, 0xFF	; 255
  d8:	0c 94 96 01 	jmp	0x32c	; 0x32c <__tablejump2__>
		case DIO_PIN0:
			TOGGLE_BIT(*port,DIO_PIN0);
  dc:	fc 01       	movw	r30, r24
  de:	30 81       	ld	r19, Z
  e0:	21 e0       	ldi	r18, 0x01	; 1
  e2:	23 27       	eor	r18, r19
  e4:	20 83       	st	Z, r18
			break;
  e6:	08 95       	ret
		case DIO_PIN1:
			TOGGLE_BIT(*port,DIO_PIN1);
  e8:	fc 01       	movw	r30, r24
  ea:	30 81       	ld	r19, Z
  ec:	22 e0       	ldi	r18, 0x02	; 2
  ee:	23 27       	eor	r18, r19
  f0:	20 83       	st	Z, r18
			break;
  f2:	08 95       	ret
		case DIO_PIN2:
			TOGGLE_BIT(*port,DIO_PIN2);
  f4:	fc 01       	movw	r30, r24
  f6:	30 81       	ld	r19, Z
  f8:	24 e0       	ldi	r18, 0x04	; 4
  fa:	23 27       	eor	r18, r19
  fc:	20 83       	st	Z, r18
			break;
  fe:	08 95       	ret
		case DIO_PIN3:
			TOGGLE_BIT(*port,DIO_PIN3);
 100:	fc 01       	movw	r30, r24
 102:	30 81       	ld	r19, Z
 104:	28 e0       	ldi	r18, 0x08	; 8
 106:	23 27       	eor	r18, r19
 108:	20 83       	st	Z, r18
			break;
 10a:	08 95       	ret
		case DIO_PIN4:
			TOGGLE_BIT(*port,DIO_PIN4);
 10c:	fc 01       	movw	r30, r24
 10e:	30 81       	ld	r19, Z
 110:	20 e1       	ldi	r18, 0x10	; 16
 112:	23 27       	eor	r18, r19
 114:	20 83       	st	Z, r18
			break;
 116:	08 95       	ret
		case DIO_PIN5:
			TOGGLE_BIT(*port,DIO_PIN5);
 118:	fc 01       	movw	r30, r24
 11a:	30 81       	ld	r19, Z
 11c:	20 e2       	ldi	r18, 0x20	; 32
 11e:	23 27       	eor	r18, r19
 120:	20 83       	st	Z, r18
			break;
 122:	08 95       	ret
		case DIO_PIN6:
			TOGGLE_BIT(*port,DIO_PIN6);
 124:	fc 01       	movw	r30, r24
 126:	30 81       	ld	r19, Z
 128:	20 e4       	ldi	r18, 0x40	; 64
 12a:	23 27       	eor	r18, r19
 12c:	20 83       	st	Z, r18
			break;
 12e:	08 95       	ret
		case DIO_PIN7:
			TOGGLE_BIT(*port,DIO_PIN7);
 130:	fc 01       	movw	r30, r24
 132:	20 81       	ld	r18, Z
 134:	20 58       	subi	r18, 0x80	; 128
 136:	20 83       	st	Z, r18
 138:	08 95       	ret

0000013a <ExtInterrupt_Enable>:
		break;
		case EXT_INT1:
		CLEAR_BIT(*GENRAL_INT_CTRL_REG, INT1_ENABLE_BIT);
		break;
		case EXT_INT2:
		CLEAR_BIT(*GENRAL_INT_CTRL_REG, INT2_ENABLE_BIT);
 13a:	81 30       	cpi	r24, 0x01	; 1
 13c:	59 f1       	breq	.+86     	; 0x194 <ExtInterrupt_Enable+0x5a>
 13e:	20 f0       	brcs	.+8      	; 0x148 <ExtInterrupt_Enable+0xe>
 140:	82 30       	cpi	r24, 0x02	; 2
 142:	09 f4       	brne	.+2      	; 0x146 <ExtInterrupt_Enable+0xc>
 144:	4d c0       	rjmp	.+154    	; 0x1e0 <ExtInterrupt_Enable+0xa6>
 146:	08 95       	ret
 148:	61 30       	cpi	r22, 0x01	; 1
 14a:	99 f0       	breq	.+38     	; 0x172 <ExtInterrupt_Enable+0x38>
 14c:	c8 f0       	brcs	.+50     	; 0x180 <ExtInterrupt_Enable+0x46>
 14e:	62 30       	cpi	r22, 0x02	; 2
 150:	49 f0       	breq	.+18     	; 0x164 <ExtInterrupt_Enable+0x2a>
 152:	63 30       	cpi	r22, 0x03	; 3
 154:	d9 f4       	brne	.+54     	; 0x18c <ExtInterrupt_Enable+0x52>
 156:	85 b7       	in	r24, 0x35	; 53
 158:	8e 7f       	andi	r24, 0xFE	; 254
 15a:	85 bf       	out	0x35, r24	; 53
 15c:	85 b7       	in	r24, 0x35	; 53
 15e:	8d 7f       	andi	r24, 0xFD	; 253
 160:	85 bf       	out	0x35, r24	; 53
 162:	14 c0       	rjmp	.+40     	; 0x18c <ExtInterrupt_Enable+0x52>
 164:	85 b7       	in	r24, 0x35	; 53
 166:	81 60       	ori	r24, 0x01	; 1
 168:	85 bf       	out	0x35, r24	; 53
 16a:	85 b7       	in	r24, 0x35	; 53
 16c:	8d 7f       	andi	r24, 0xFD	; 253
 16e:	85 bf       	out	0x35, r24	; 53
 170:	0d c0       	rjmp	.+26     	; 0x18c <ExtInterrupt_Enable+0x52>
 172:	85 b7       	in	r24, 0x35	; 53
 174:	8e 7f       	andi	r24, 0xFE	; 254
 176:	85 bf       	out	0x35, r24	; 53
 178:	85 b7       	in	r24, 0x35	; 53
 17a:	82 60       	ori	r24, 0x02	; 2
 17c:	85 bf       	out	0x35, r24	; 53
 17e:	06 c0       	rjmp	.+12     	; 0x18c <ExtInterrupt_Enable+0x52>
 180:	85 b7       	in	r24, 0x35	; 53
 182:	81 60       	ori	r24, 0x01	; 1
 184:	85 bf       	out	0x35, r24	; 53
 186:	85 b7       	in	r24, 0x35	; 53
 188:	82 60       	ori	r24, 0x02	; 2
 18a:	85 bf       	out	0x35, r24	; 53
 18c:	8b b7       	in	r24, 0x3b	; 59
 18e:	80 64       	ori	r24, 0x40	; 64
 190:	8b bf       	out	0x3b, r24	; 59
 192:	08 95       	ret
 194:	61 30       	cpi	r22, 0x01	; 1
 196:	99 f0       	breq	.+38     	; 0x1be <ExtInterrupt_Enable+0x84>
 198:	c8 f0       	brcs	.+50     	; 0x1cc <ExtInterrupt_Enable+0x92>
 19a:	62 30       	cpi	r22, 0x02	; 2
 19c:	49 f0       	breq	.+18     	; 0x1b0 <ExtInterrupt_Enable+0x76>
 19e:	63 30       	cpi	r22, 0x03	; 3
 1a0:	d9 f4       	brne	.+54     	; 0x1d8 <ExtInterrupt_Enable+0x9e>
 1a2:	85 b7       	in	r24, 0x35	; 53
 1a4:	8b 7f       	andi	r24, 0xFB	; 251
 1a6:	85 bf       	out	0x35, r24	; 53
 1a8:	85 b7       	in	r24, 0x35	; 53
 1aa:	87 7f       	andi	r24, 0xF7	; 247
 1ac:	85 bf       	out	0x35, r24	; 53
 1ae:	14 c0       	rjmp	.+40     	; 0x1d8 <ExtInterrupt_Enable+0x9e>
 1b0:	85 b7       	in	r24, 0x35	; 53
 1b2:	84 60       	ori	r24, 0x04	; 4
 1b4:	85 bf       	out	0x35, r24	; 53
 1b6:	85 b7       	in	r24, 0x35	; 53
 1b8:	87 7f       	andi	r24, 0xF7	; 247
 1ba:	85 bf       	out	0x35, r24	; 53
 1bc:	0d c0       	rjmp	.+26     	; 0x1d8 <ExtInterrupt_Enable+0x9e>
 1be:	85 b7       	in	r24, 0x35	; 53
 1c0:	8b 7f       	andi	r24, 0xFB	; 251
 1c2:	85 bf       	out	0x35, r24	; 53
 1c4:	85 b7       	in	r24, 0x35	; 53
 1c6:	88 60       	ori	r24, 0x08	; 8
 1c8:	85 bf       	out	0x35, r24	; 53
 1ca:	06 c0       	rjmp	.+12     	; 0x1d8 <ExtInterrupt_Enable+0x9e>
 1cc:	85 b7       	in	r24, 0x35	; 53
 1ce:	84 60       	ori	r24, 0x04	; 4
 1d0:	85 bf       	out	0x35, r24	; 53
 1d2:	85 b7       	in	r24, 0x35	; 53
 1d4:	88 60       	ori	r24, 0x08	; 8
 1d6:	85 bf       	out	0x35, r24	; 53
 1d8:	8b b7       	in	r24, 0x3b	; 59
 1da:	80 68       	ori	r24, 0x80	; 128
 1dc:	8b bf       	out	0x3b, r24	; 59
 1de:	08 95       	ret
 1e0:	66 23       	and	r22, r22
 1e2:	31 f0       	breq	.+12     	; 0x1f0 <ExtInterrupt_Enable+0xb6>
 1e4:	61 30       	cpi	r22, 0x01	; 1
 1e6:	39 f4       	brne	.+14     	; 0x1f6 <ExtInterrupt_Enable+0xbc>
 1e8:	84 b7       	in	r24, 0x34	; 52
 1ea:	8f 7b       	andi	r24, 0xBF	; 191
 1ec:	84 bf       	out	0x34, r24	; 52
 1ee:	08 95       	ret
 1f0:	84 b7       	in	r24, 0x34	; 52
 1f2:	80 64       	ori	r24, 0x40	; 64
 1f4:	84 bf       	out	0x34, r24	; 52
 1f6:	08 95       	ret

000001f8 <GlobaleInterrupts_StateSet>:
		break;
	}
}
void GlobaleInterrupts_StateSet(GlobalInterruptsStateEnum_t State)
{
	switch(State)
 1f8:	88 23       	and	r24, r24
 1fa:	19 f0       	breq	.+6      	; 0x202 <GlobaleInterrupts_StateSet+0xa>
 1fc:	81 30       	cpi	r24, 0x01	; 1
 1fe:	29 f0       	breq	.+10     	; 0x20a <GlobaleInterrupts_StateSet+0x12>
 200:	08 95       	ret
	{
		case GLOBAL_INTERRUPTS_DISABLE:
		CLEAR_BIT(*AVR_STATUS_REG, GLOBALE_INTERRUPTS_ENABLE_BIT);
 202:	8f b7       	in	r24, 0x3f	; 63
 204:	8f 77       	andi	r24, 0x7F	; 127
 206:	8f bf       	out	0x3f, r24	; 63
		break;
 208:	08 95       	ret
		case GLOBAL_INTERRUPTS_ENABLE:
		SET_BIT(*AVR_STATUS_REG, GLOBALE_INTERRUPTS_ENABLE_BIT);
 20a:	8f b7       	in	r24, 0x3f	; 63
 20c:	80 68       	ori	r24, 0x80	; 128
 20e:	8f bf       	out	0x3f, r24	; 63
 210:	08 95       	ret

00000212 <Led_Init>:
			switch(state){
				case LED_ON:
					DioChannelWrite(PORTD_OUTPUT_REG,DIO_PIN3,DIO_HIGH);
					break;
				case LED_OFF:
					DioChannelWrite(PORTD_OUTPUT_REG,DIO_PIN3,DIO_LOW);
 212:	81 30       	cpi	r24, 0x01	; 1
 214:	59 f0       	breq	.+22     	; 0x22c <Led_Init+0x1a>
 216:	18 f0       	brcs	.+6      	; 0x21e <Led_Init+0xc>
 218:	82 30       	cpi	r24, 0x02	; 2
 21a:	79 f0       	breq	.+30     	; 0x23a <Led_Init+0x28>
 21c:	08 95       	ret
 21e:	41 e0       	ldi	r20, 0x01	; 1
 220:	62 e0       	ldi	r22, 0x02	; 2
 222:	84 e3       	ldi	r24, 0x34	; 52
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 46 00 	call	0x8c	; 0x8c <DioDirectionSet>
 22a:	08 95       	ret
 22c:	41 e0       	ldi	r20, 0x01	; 1
 22e:	67 e0       	ldi	r22, 0x07	; 7
 230:	84 e3       	ldi	r24, 0x34	; 52
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 46 00 	call	0x8c	; 0x8c <DioDirectionSet>
 238:	08 95       	ret
 23a:	41 e0       	ldi	r20, 0x01	; 1
 23c:	63 e0       	ldi	r22, 0x03	; 3
 23e:	81 e3       	ldi	r24, 0x31	; 49
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	0e 94 46 00 	call	0x8c	; 0x8c <DioDirectionSet>
 246:	08 95       	ret

00000248 <Led_Toggle>:
		}
		break;
	}
}
void Led_Toggle(LedEnum_t led){
	switch(led){
 248:	81 30       	cpi	r24, 0x01	; 1
 24a:	51 f0       	breq	.+20     	; 0x260 <Led_Toggle+0x18>
 24c:	18 f0       	brcs	.+6      	; 0x254 <Led_Toggle+0xc>
 24e:	82 30       	cpi	r24, 0x02	; 2
 250:	69 f0       	breq	.+26     	; 0x26c <Led_Toggle+0x24>
 252:	08 95       	ret
		case LED_0:
			DioChannelToggle(PORTC_OUTPUT_REG,DIO_PIN2);
 254:	62 e0       	ldi	r22, 0x02	; 2
 256:	85 e3       	ldi	r24, 0x35	; 53
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	0e 94 64 00 	call	0xc8	; 0xc8 <DioChannelToggle>
			break;
 25e:	08 95       	ret
		case LED_1:
			DioChannelToggle(PORTC_OUTPUT_REG,DIO_PIN7);
 260:	67 e0       	ldi	r22, 0x07	; 7
 262:	85 e3       	ldi	r24, 0x35	; 53
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	0e 94 64 00 	call	0xc8	; 0xc8 <DioChannelToggle>
			break;
 26a:	08 95       	ret
		case LED_2:
			DioChannelToggle(PORTD_OUTPUT_REG,DIO_PIN3);
 26c:	63 e0       	ldi	r22, 0x03	; 3
 26e:	82 e3       	ldi	r24, 0x32	; 50
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0e 94 64 00 	call	0xc8	; 0xc8 <DioChannelToggle>
 276:	08 95       	ret

00000278 <__vector_1>:
#include "LED_Interface.h"
#include "SWITCH_Interface.h"
#include <avr/interrupt.h>

ISR(INT0_vect)
{
 278:	1f 92       	push	r1
 27a:	0f 92       	push	r0
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	0f 92       	push	r0
 280:	11 24       	eor	r1, r1
 282:	2f 93       	push	r18
 284:	3f 93       	push	r19
 286:	4f 93       	push	r20
 288:	5f 93       	push	r21
 28a:	6f 93       	push	r22
 28c:	7f 93       	push	r23
 28e:	8f 93       	push	r24
 290:	9f 93       	push	r25
 292:	af 93       	push	r26
 294:	bf 93       	push	r27
 296:	ef 93       	push	r30
 298:	ff 93       	push	r31
	/* Toggle LEDS */
	Led_Toggle(LED_0);
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	0e 94 24 01 	call	0x248	; 0x248 <Led_Toggle>
	Led_Toggle(LED_1);
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	0e 94 24 01 	call	0x248	; 0x248 <Led_Toggle>
	Led_Toggle(LED_2);
 2a6:	82 e0       	ldi	r24, 0x02	; 2
 2a8:	0e 94 24 01 	call	0x248	; 0x248 <Led_Toggle>
}
 2ac:	ff 91       	pop	r31
 2ae:	ef 91       	pop	r30
 2b0:	bf 91       	pop	r27
 2b2:	af 91       	pop	r26
 2b4:	9f 91       	pop	r25
 2b6:	8f 91       	pop	r24
 2b8:	7f 91       	pop	r23
 2ba:	6f 91       	pop	r22
 2bc:	5f 91       	pop	r21
 2be:	4f 91       	pop	r20
 2c0:	3f 91       	pop	r19
 2c2:	2f 91       	pop	r18
 2c4:	0f 90       	pop	r0
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	0f 90       	pop	r0
 2ca:	1f 90       	pop	r1
 2cc:	18 95       	reti

000002ce <main>:

int main(void)
{
    ExtInterrupt_Enable(EXT_INT0, RISING_EDGE_MODE);
 2ce:	60 e0       	ldi	r22, 0x00	; 0
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	0e 94 9d 00 	call	0x13a	; 0x13a <ExtInterrupt_Enable>
	GlobaleInterrupts_StateSet(GLOBAL_INTERRUPTS_ENABLE);
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <GlobaleInterrupts_StateSet>
	Switch_Init(SWITCH_2);
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <Switch_Init>
	Led_Init(LED_0);
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	0e 94 09 01 	call	0x212	; 0x212 <Led_Init>
	Led_Init(LED_1);
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	0e 94 09 01 	call	0x212	; 0x212 <Led_Init>
	Led_Init(LED_2);
 2ee:	82 e0       	ldi	r24, 0x02	; 2
 2f0:	0e 94 09 01 	call	0x212	; 0x212 <Led_Init>
 2f4:	ff cf       	rjmp	.-2      	; 0x2f4 <main+0x26>

000002f6 <Switch_Init>:
#define DEBOUNCE_PERIOD (20U)

Dio_PinStateEnum_t sw_PrevState = DIO_LOW;

void Switch_Init(Switch_t switch_Button){
	switch(switch_Button){
 2f6:	81 30       	cpi	r24, 0x01	; 1
 2f8:	59 f0       	breq	.+22     	; 0x310 <Switch_Init+0x1a>
 2fa:	18 f0       	brcs	.+6      	; 0x302 <Switch_Init+0xc>
 2fc:	82 30       	cpi	r24, 0x02	; 2
 2fe:	79 f0       	breq	.+30     	; 0x31e <Switch_Init+0x28>
 300:	08 95       	ret
		case SWITCH_0:
				DioDirectionSet(PORTB_DIR_REG,DIO_PIN0,DIO_INPUT);
 302:	40 e0       	ldi	r20, 0x00	; 0
 304:	60 e0       	ldi	r22, 0x00	; 0
 306:	87 e3       	ldi	r24, 0x37	; 55
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 46 00 	call	0x8c	; 0x8c <DioDirectionSet>
				break;
 30e:	08 95       	ret
			case SWITCH_1:
				DioDirectionSet(PORTD_DIR_REG,DIO_PIN6,DIO_INPUT);
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	66 e0       	ldi	r22, 0x06	; 6
 314:	81 e3       	ldi	r24, 0x31	; 49
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	0e 94 46 00 	call	0x8c	; 0x8c <DioDirectionSet>
				break;
 31c:	08 95       	ret
			case SWITCH_2:
				DioDirectionSet(PORTD_DIR_REG,DIO_PIN2,DIO_INPUT);
 31e:	40 e0       	ldi	r20, 0x00	; 0
 320:	62 e0       	ldi	r22, 0x02	; 2
 322:	81 e3       	ldi	r24, 0x31	; 49
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	0e 94 46 00 	call	0x8c	; 0x8c <DioDirectionSet>
 32a:	08 95       	ret

0000032c <__tablejump2__>:
 32c:	ee 0f       	add	r30, r30
 32e:	ff 1f       	adc	r31, r31
 330:	05 90       	lpm	r0, Z+
 332:	f4 91       	lpm	r31, Z
 334:	e0 2d       	mov	r30, r0
 336:	09 94       	ijmp

00000338 <_exit>:
 338:	f8 94       	cli

0000033a <__stop_program>:
 33a:	ff cf       	rjmp	.-2      	; 0x33a <__stop_program>
